#!/usr/bin/env python
import subprocess
import sys

def exec_cmd(cmdList):
  output = subprocess.Popen(cmdList,stdout=subprocess.PIPE,
      stderr=subprocess.PIPE).communicate()
  if (output[1] != ''):
    raise Exception(output[1])
  return output[0]

def print_usage():
  import os.path
  print 'usage: %s [-v] branch'%(os.path.basename(sys.argv[0]))

# get the patch-id for the pathless diff for hash "h"
def pathless_diff_id(h):
  cmd = ['git-diff-tree', '-p', '%s'%(h)]
  diffoutput = subprocess.Popen(cmd,stdout=subprocess.PIPE)
  cmd = ['sed', '-r', 's,(^diff --git) a/(\\S+) b/(\\S+),\\1 a/f1 b/f1,g']
  sed1 = subprocess.Popen(cmd,stdout=subprocess.PIPE, stdin=diffoutput.stdout)
  cmd[2] = 's,^([-+]{3}) ([ab])/.+$,\\1 \\2/f1,g'
  sed2 = subprocess.Popen(cmd,stdout=subprocess.PIPE, stdin=sed1.stdout)
  cmd = ['git-patch-id']
  patchid = subprocess.Popen(cmd,stdout=subprocess.PIPE, stdin=sed2.stdout).communicate()
  if len(patchid) and patchid[0]:
    return patchid[0].split()[0]
  else:
    return ''

def do_cherry(branch, verbose=False):
  try:
    # get commits from branch..HEAD
    cmd = ['git-rev-parse', '--verify', '%s'%branch]
    branch_hash = exec_cmd(cmd).strip()
    cmd[2] = 'HEAD'
    head_hash = exec_cmd(cmd).strip()

    cmd = ['git-rev-list', '^%s'%head_hash, branch_hash]
    branch_hashes = exec_cmd(cmd).split('\n')

    # get commits from HEAD..branch
    cmd = ['git-rev-list', head_hash, '^%s'%branch_hash]
    head_hashes = exec_cmd(cmd).split('\n')

    # for each diff on head_hashes, get the "pathless diff hash"
    head_patch_hashes = []
    for h in head_hashes:
      if h:
        head_patch_hashes.append(pathless_diff_id(h))
      else:
        head_patch_hashes.append('')

    branch_patch_hashes = []
    for h in branch_hashes:
      if h:
        branch_patch_hashes.append(pathless_diff_id(h))
      else:
        branch_patch_hashes.append('')

    # see which of the branch hashes are not in the head hashes
    index = 0
    head_patch_hashes.reverse()
    head_hashes.reverse()
    for i in head_patch_hashes:
      symbol = '-'
      if i and i not in branch_patch_hashes:
        symbol = '+'
      if i:
        bh = head_hashes[index]
        details = bh+'\n'
        if verbose:
          details = exec_cmd(['git-log','--pretty=oneline','%s~1..%s'%(bh,bh)])
        print symbol+' '+details,
      index += 1

  except Exception,e:
    print e.message,


if __name__ == '__main__':
  branch_arg_index = 1
  min_argv_len = 1
  verbose = False
  if len(sys.argv) > 1 and sys.argv[1] == '-v':
    verbose = True
    branch_arg_index += 1
    min_argv_len = 2

  if len(sys.argv) <= min_argv_len:
    print_usage()
    sys.exit(1)

  branch = sys.argv[branch_arg_index]
  do_cherry(branch, verbose)
