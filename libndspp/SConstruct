import os, os.path, glob, sys

libName = 'ndspp'

headers=['#/include']
commonFlags = ' -g -Wall '

defaultEnv = Environment( CCFLAGS=commonFlags, CPPPATH=headers,
    tools=['default', 'color'], toolpath = ['ndspp-scons'])
buildTargets = ['pc', 'arm9', 'arm7']
# function definitions

def die(msg):
  import color
  print '*** ',
  color.pprint(msg, color.red)
  Exit(1)

def configure(target, env):
  conf = env.Configure()
  where = ' in $DEVKITPRO'
  if target == 'arm7':
    conf.CheckHeader('nds.h') or die('Install libnds'+where)
    where += '/libnds'
    conf.CheckHeader(['nds/jtypes.h', 'dswifi7.h']) or die('Install the dswifi library'+where)
  elif target == 'arm9':
    conf.CheckHeader('nds.h') or die('Install libnds'+where)
    where += '/libnds'
    conf.CheckHeader(['nds/jtypes.h', 'dswifi9.h']) or die('Install the dswifi library'+where)
    conf.CheckHeader('fat.h') or die('Install the fat library'+where)
  else:
    where = '-dev for your system'
    conf.CheckHeader('SDL/SDL.h') or die('Install SDL'+where)

  # common libs
  if target != 'arm7':
    for i in 'zlib png gif_lib'.split():
      conf.CheckHeader(i+'.h') or die('Install '+i+where)
    conf.CheckHeader(['stdio.h', 'jpeglib.h']) or die('Install jpeglib'+where)

  return conf.Finish()

def createEnv(buildTarget):
  global defaultEnv
  env = None
  if buildTarget.startswith('arm'):
    env = defaultEnv.Copy( tools = [ ('arm', { 'type':buildTarget })] )
    env.Append(CCFLAGS=' -O2 ')
  else:
    env = defaultEnv.Copy()
    env.Append(CCFLAGS=' -O0 ')
    for i in ['CC', 'CXX']:
      if os.environ.has_key(i) and os.environ[i]:
        env[i] = os.environ[i]
  return configure(buildTarget, env)

def build(buildTarget):
  """ build a particular build target """
  subdirs = []

  if (buildTarget != 'arm7'):
    subdirs.append('common')

  env = createEnv(buildTarget)

  subdirs.append(buildTarget)

  env['SOURCE_DIRS'] = subdirs

  for subdir in subdirs:
    env['%s_SOURCE'%(subdir.upper())] = [ os.path.basename(filename) for filename in glob.glob('source/%s/*.cpp'%subdir)]

  # export the env to the SConscripts
  Export('env')

  # get the build artifacts from the sub directories
  # build them in build/<target> directory
  buildDir = 'build/%s'%buildTarget
  objs = SConscript('source/SConscript', build_dir=buildDir, duplicate=0)

  # create lib/libndspp-<target> file
  libraryName = 'lib/%s-%s'%(libName, buildTarget)
  lib = env.Library(libraryName, objs)
  env.Precious(lib)

# build steps
[ build(buildTarget) for buildTarget in buildTargets ]

# vim: set filetype=python :
